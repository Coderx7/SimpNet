## reduce learning rate after 120 epochs (60000 iters) by factor 0f 10
## then another factor of 10 after 10 more epochs (5000 iters)

## The train/test net protocol buffer definition
#net: "examples/cifar10/cifar10_full_relu_train_test_bn.prototxt"
# test_iter: 100
# test_interval: 1000
# base_lr: 0.01
# display: 100
# max_iter: 80000
# lr_policy: "multistep"
# gamma: 0.1
# momentum: 0.9
# weight_decay: 0.0001
# snapshot: 80000
# snapshot_prefix: "examples/cifar10/Squezenet"
# solver_mode: GPU
# test_initialization: true
# stepvalue: 32000
# stepvalue: 48000
# stepvalue: 54000
# stepvalue: 74000
# type: "Nesterov"

# The train/test net protocol buffer definition
net: "examples/cifar10/cifar10_full_relu_train_test_bn.prototxt"
test_iter: 100
test_interval: 500
# The learning rate policy
base_lr: 0.1
momentum: 0.90
weight_decay:  0.005 #0.005
type:"AdaDelta"
delta:1e-3
gamma: 0.1
lr_policy: "multistep"
stepvalue: 50000
stepvalue: 95000
stepvalue: 153000
stepvalue: 195000
stepvalue: 220000
stepvalue: 270000
# Display every 200 iterations
display: 100
# The maximum number of iterations
max_iter: 400000 
# snapshot intermediate results
snapshot: 500
snapshot_prefix: "examples/cifar10/snaps/squeezenet_batchnorm"
# solver mode: CPU or GPU
solver_mode: GPU
random_seed: 786